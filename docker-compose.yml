services:
  frontend:
    build: 
      context: ./app/frontend
    container_name: frontend
    restart: always
    expose:
      - 80
    networks:
      - app-network

  backoffice:
    build: 
      context: ./app/backoffice
    container_name: backoffice
    restart: always
    environment:
      - DATABASE_CLIENT=mysql
      - DATABASE_HOST=mysql
      - DATABASE_PORT=3306
      - DATABASE_NAME=strapi_db
      - DATABASE_USERNAME=strapi_user
      - DATABASE_PASSWORD=strapi_password
      - NODE_ENV=production
    ports:
      - "1337:1337"
    depends_on:
      - mysql
    networks:
      - app-network

  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    environment:
      MYSQL_DATABASE: strapi_db
      MYSQL_USER: strapi_user
      MYSQL_PASSWORD: strapi_password
      MYSQL_ROOT_PASSWORD: rootpassword
    ports:
      - "3307:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - app-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: always
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: rootpassword
    ports:
      - "8081:80"
    depends_on:
      - mysql
    networks:
      - app-network

  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/nginx.conf.template:/etc/nginx/nginx.conf.template
      - ./config/nginx.conf.ssl.template:/etc/nginx/nginx.conf.ssl.template
      - ./config/start-nginx.sh:/start-nginx.sh
      - /etc/letsencrypt:/etc/letsencrypt:ro
    entrypoint: /start-nginx.sh
    depends_on:
      - frontend
      - backoffice
      - phpmyadmin
    environment:
      - DOMAIN_FRONT=${DOMAIN_FRONT}
      - DOMAIN_BACKOFFICE=${DOMAIN_BACKOFFICE}
      - DOMAIN_PHPMYADMIN=${DOMAIN_PHPMYADMIN}
      - ENABLE_SSL=${ENABLE_SSL}
    networks:
      - app-network

volumes:
  mysql-data:

networks:
  app-network:
    driver: bridge